version: '3'
services:
  producer:
    build:
      context: ./Producer/
      dockerfile: Dockerfile
    image: d3vd/report-gen-producer
    ports:
      - '8080:8080'
    links:
      - reportQ
    deploy:
      replicas: 3
    environment:
      REPORT_QUEUE_PORT: reportQ:11300

  reportQ:
    image: schickling/beanstalkd
    ports:
      - '11301:11300'

  notifierQ:
    image: schickling/beanstalkd
    ports:
      - '11302:11300'

  elasticsearch:
    image: elasticsearch:2.4.0
    ports:
      - '9200:9200'

  report-generator:
    build:
      context: ./ReportGenerator/
      dockerfile: Dockerfile
    image: d3vd/report-gen-main
    deploy:
      replicas: 5
    links:
      - reportQ
      - notifierQ
      - elasticsearch
    environment:
      - REPORT_QUEUE_PORT=reportQ:11300
      - NOTIFIER_QUEUE_PORT=notifierQ:11300
      - ES_PORT=elasticsearch:9200
      - S3_REGION
      - S3_BUCKET
      - AWS_ACCESS_KEY_ID
      - AWS_SECRET_ACCESS_KEY

  notifier:
    build:
      context: ./Notifier/
      dockerfile: Dockerfile
    image: d3vd/report-gen-notifier
    deploy:
      replicas: 3
    links:
      - notifierQ
    environment:
      - NOTIFIER_QUEUE_PORT=notifierQ:11300
      - SENDGRID_API_KEY

  visualizer:
    image: dockersamples/visualizer
    deploy:
      placement:
        constraints: [node.role == manager]
    ports:
      - '3000:8080'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
